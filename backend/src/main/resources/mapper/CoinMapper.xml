<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hc.demo.dao.CoinDao">
    <insert id="setCoinFavorite">
        INSERT INTO Favorites (member_uid, coin_uid)
        VALUES (#{uid}, #{coin_uid})
    </insert>

    <delete id="unsetCoinFavorite">
        DELETE
        FROM
            Favorites
        WHERE
            member_uid = #{uid}
        AND
            coin_uid = #{coin_uid}
    </delete>

    <select id="getCoinList" resultType="HashMap">
        SELECT
        c.uid,
        c.name,
        c.symbol,
        ROUND(p.closing_price, 2) AS closing_price,
        ROUND((p.closing_price - p.opening_price), 2) AS updown_amount,
        ROUND(((p.closing_price - p.opening_price) / p.opening_price * 100), 2) AS updown_rate,
        CASE WHEN f.member_uid IS NOT NULL THEN 1 ELSE 0 END AS is_favorite
        FROM
        Coin c
        JOIN
        price_info p ON c.uid = p.coin_uid
        JOIN (
        SELECT
        coin_uid,
        MAX(standard_time) AS latest_standard_time
        FROM
        price_info
        GROUP BY
        coin_uid
        ) lp ON p.coin_uid = lp.coin_uid AND p.standard_time = lp.latest_standard_time
        LEFT JOIN
        Favorites f ON c.uid = f.coin_uid AND f.member_uid = #{uid}
        WHERE
        c.uid != 127;
    </select>
</mapper>